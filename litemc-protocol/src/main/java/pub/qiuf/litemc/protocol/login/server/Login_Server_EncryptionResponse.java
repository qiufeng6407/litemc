package pub.qiuf.litemc.protocol.login.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Login_Server_EncryptionResponse extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x01;
    /** Length of Shared Secret */
    @MCType("VarInt")
    private int sharedSecretLength;
    @MCType("Byte")
    private byte[] sharedSecret;
    /** Length of Verify Token */
    @MCType("VarInt")
    private int verifyTokenLength;
    @MCType("Byte")
    private byte[] verifyToken;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // Length of Shared Secret
        packet.write(ByteUtils.encodeVarInt(sharedSecretLength));
        packet.write(sharedSecret);
        // Length of Verify Token
        packet.write(ByteUtils.encodeVarInt(verifyTokenLength));
        packet.write(verifyToken);
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // Length of Shared Secret
        sharedSecretLength = StreamUtils.readVarInt(in);
        // TODO decode sharedSecret
        // Length of Verify Token
        verifyTokenLength = StreamUtils.readVarInt(in);
        // TODO decode verifyToken
    }
    public static class Login_Server_EncryptionResponse_Builder {
        private Login_Server_EncryptionResponse object = new Login_Server_EncryptionResponse();
        /** Packet ID */
        public Login_Server_EncryptionResponse_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** Length of Shared Secret */
        public Login_Server_EncryptionResponse_Builder sharedSecretLength(int sharedSecretLength) {
            object.sharedSecretLength = sharedSecretLength;
            return this;
        }
        public Login_Server_EncryptionResponse_Builder sharedSecret(byte[] sharedSecret) {
            object.sharedSecret = sharedSecret;
            return this;
        }
        /** Length of Verify Token */
        public Login_Server_EncryptionResponse_Builder verifyTokenLength(int verifyTokenLength) {
            object.verifyTokenLength = verifyTokenLength;
            return this;
        }
        public Login_Server_EncryptionResponse_Builder verifyToken(byte[] verifyToken) {
            object.verifyToken = verifyToken;
            return this;
        }
        public Login_Server_EncryptionResponse build() {
             return object;
        }

    }
    public static Login_Server_EncryptionResponse_Builder builder() {
        return new Login_Server_EncryptionResponse_Builder();
    }
}