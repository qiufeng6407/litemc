package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_UpdateJigsawBlock extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x27;
    /** Block entity location */
    @MCType("Position")
    private byte[] location = new byte[8];
    @MCType("Identifier")
    private String attachmentType;
    @MCType("Identifier")
    private String targetPool;
    /** "Turns into" on the GUI, final_state in NBT */
    @MCType("String")
    private String finalState;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // Block entity location
        packet.write(location);
        packet.write(ByteUtils.encodeIdentifier(attachmentType));
        packet.write(ByteUtils.encodeIdentifier(targetPool));
        // "Turns into" on the GUI, final_state in NBT
        packet.write(ByteUtils.encodeString(finalState));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // Block entity location
        // TODO decode location
        attachmentType = StreamUtils.readIdentifier(in);
        targetPool = StreamUtils.readIdentifier(in);
        // "Turns into" on the GUI, final_state in NBT
        finalState = StreamUtils.readString(in);
    }
    public static class Play_Server_UpdateJigsawBlock_Builder {
        private Play_Server_UpdateJigsawBlock object = new Play_Server_UpdateJigsawBlock();
        /** Packet ID */
        public Play_Server_UpdateJigsawBlock_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** Block entity location */
        public Play_Server_UpdateJigsawBlock_Builder location(byte[] location) {
            object.location = location;
            return this;
        }
        public Play_Server_UpdateJigsawBlock_Builder attachmentType(String attachmentType) {
            object.attachmentType = attachmentType;
            return this;
        }
        public Play_Server_UpdateJigsawBlock_Builder targetPool(String targetPool) {
            object.targetPool = targetPool;
            return this;
        }
        /** "Turns into" on the GUI, final_state in NBT */
        public Play_Server_UpdateJigsawBlock_Builder finalState(String finalState) {
            object.finalState = finalState;
            return this;
        }
        public Play_Server_UpdateJigsawBlock build() {
             return object;
        }

    }
    public static Play_Server_UpdateJigsawBlock_Builder builder() {
        return new Play_Server_UpdateJigsawBlock_Builder();
    }
}