package pub.qiuf.litemc.protocol.play.client;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
@ServerPacket(0x29)
public class Play_Client_EntityPosition extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x29;
    @MCType("VarInt")
    private int entityId;
    /** Change in X position as (currentX * 32 - prevX * 32) * 128 */
    @MCType("Short")
    private short deltaX;
    /** Change in Y position as (currentY * 32 - prevY * 32) * 128 */
    @MCType("Short")
    private short deltaY;
    /** Change in Z position as (currentZ * 32 - prevZ * 32) * 128 */
    @MCType("Short")
    private short deltaZ;
    @MCType("Boolean")
    private boolean onGround;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        packet.write(ByteUtils.encodeVarInt(entityId));
        // Change in X position as (currentX * 32 - prevX * 32) * 128
        packet.write(ByteUtils.encodeShort(deltaX));
        // Change in Y position as (currentY * 32 - prevY * 32) * 128
        packet.write(ByteUtils.encodeShort(deltaY));
        // Change in Z position as (currentZ * 32 - prevZ * 32) * 128
        packet.write(ByteUtils.encodeShort(deltaZ));
        packet.write(ByteUtils.encodeBoolean(onGround));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        entityId = StreamUtils.readVarInt(in);
        // Change in X position as (currentX * 32 - prevX * 32) * 128
        deltaX = StreamUtils.readShort(in);
        // Change in Y position as (currentY * 32 - prevY * 32) * 128
        deltaY = StreamUtils.readShort(in);
        // Change in Z position as (currentZ * 32 - prevZ * 32) * 128
        deltaZ = StreamUtils.readShort(in);
        onGround = StreamUtils.readBoolean(in);
    }
    public static class Play_Client_EntityPosition_Builder {
        private Play_Client_EntityPosition object = new Play_Client_EntityPosition();
        /** Packet ID */
        public Play_Client_EntityPosition_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        public Play_Client_EntityPosition_Builder entityId(int entityId) {
            object.entityId = entityId;
            return this;
        }
        /** Change in X position as (currentX * 32 - prevX * 32) * 128 */
        public Play_Client_EntityPosition_Builder deltaX(short deltaX) {
            object.deltaX = deltaX;
            return this;
        }
        /** Change in Y position as (currentY * 32 - prevY * 32) * 128 */
        public Play_Client_EntityPosition_Builder deltaY(short deltaY) {
            object.deltaY = deltaY;
            return this;
        }
        /** Change in Z position as (currentZ * 32 - prevZ * 32) * 128 */
        public Play_Client_EntityPosition_Builder deltaZ(short deltaZ) {
            object.deltaZ = deltaZ;
            return this;
        }
        public Play_Client_EntityPosition_Builder onGround(boolean onGround) {
            object.onGround = onGround;
            return this;
        }
        public Play_Client_EntityPosition build() {
             return object;
        }

    }
    public static Play_Client_EntityPosition_Builder builder() {
        return new Play_Client_EntityPosition_Builder();
    }
}