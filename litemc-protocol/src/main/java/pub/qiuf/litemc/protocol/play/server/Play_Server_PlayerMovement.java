package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_PlayerMovement extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x14;
    /** True if the client is on the ground, false otherwise */
    @MCType("Boolean")
    private boolean onGround;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // True if the client is on the ground, false otherwise
        packet.write(ByteUtils.encodeBoolean(onGround));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // True if the client is on the ground, false otherwise
        onGround = StreamUtils.readBoolean(in);
    }
    public static class Play_Server_PlayerMovement_Builder {
        private Play_Server_PlayerMovement object = new Play_Server_PlayerMovement();
        /** Packet ID */
        public Play_Server_PlayerMovement_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** True if the client is on the ground, false otherwise */
        public Play_Server_PlayerMovement_Builder onGround(boolean onGround) {
            object.onGround = onGround;
            return this;
        }
        public Play_Server_PlayerMovement build() {
             return object;
        }

    }
    public static Play_Server_PlayerMovement_Builder builder() {
        return new Play_Server_PlayerMovement_Builder();
    }
}