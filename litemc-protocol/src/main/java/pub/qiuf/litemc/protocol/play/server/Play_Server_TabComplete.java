package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_TabComplete extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x06;
    /** The id received in the tab completion request packet, must match or the client will ignore this packet. Client generates this and increments it each time it sends another tab completion that doesn't get a response. */
    @MCType("VarInt")
    private int transactionId;
    /** All text behind the cursor without the / (e.g. to the left of the cursor in left-to-right languages like English) */
    @MCType("String")
    private String text;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // The id received in the tab completion request packet, must match or the client will ignore this packet. Client generates this and increments it each time it sends another tab completion that doesn't get a response.
        packet.write(ByteUtils.encodeVarInt(transactionId));
        // All text behind the cursor without the / (e.g. to the left of the cursor in left-to-right languages like English)
        packet.write(ByteUtils.encodeString(text));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // The id received in the tab completion request packet, must match or the client will ignore this packet. Client generates this and increments it each time it sends another tab completion that doesn't get a response.
        transactionId = StreamUtils.readVarInt(in);
        // All text behind the cursor without the / (e.g. to the left of the cursor in left-to-right languages like English)
        text = StreamUtils.readString(in);
    }
    public static class Play_Server_TabComplete_Builder {
        private Play_Server_TabComplete object = new Play_Server_TabComplete();
        /** Packet ID */
        public Play_Server_TabComplete_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** The id received in the tab completion request packet, must match or the client will ignore this packet. Client generates this and increments it each time it sends another tab completion that doesn't get a response. */
        public Play_Server_TabComplete_Builder transactionId(int transactionId) {
            object.transactionId = transactionId;
            return this;
        }
        /** All text behind the cursor without the / (e.g. to the left of the cursor in left-to-right languages like English) */
        public Play_Server_TabComplete_Builder text(String text) {
            object.text = text;
            return this;
        }
        public Play_Server_TabComplete build() {
             return object;
        }

    }
    public static Play_Server_TabComplete_Builder builder() {
        return new Play_Server_TabComplete_Builder();
    }
}