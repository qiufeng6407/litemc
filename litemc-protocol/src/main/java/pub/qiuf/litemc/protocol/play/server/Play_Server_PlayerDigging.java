package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_PlayerDigging extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x1A;
    /** The action the player is taking against the block (see below) */
    @MCType("VarInt")
    private int status;
    /** Block position */
    @MCType("Position")
    private byte[] location = new byte[8];
    /** The face being hit (see below) */
    @MCType("Byte")
    private byte face;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // The action the player is taking against the block (see below)
        packet.write(ByteUtils.encodeVarInt(status));
        // Block position
        packet.write(location);
        // The face being hit (see below)
        packet.write(ByteUtils.encodeByte(face));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // The action the player is taking against the block (see below)
        status = StreamUtils.readVarInt(in);
        // Block position
        // TODO decode location
        // The face being hit (see below)
        face = StreamUtils.readByte(in);
    }
    public static class Play_Server_PlayerDigging_Builder {
        private Play_Server_PlayerDigging object = new Play_Server_PlayerDigging();
        /** Packet ID */
        public Play_Server_PlayerDigging_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** The action the player is taking against the block (see below) */
        public Play_Server_PlayerDigging_Builder status(int status) {
            object.status = status;
            return this;
        }
        /** Block position */
        public Play_Server_PlayerDigging_Builder location(byte[] location) {
            object.location = location;
            return this;
        }
        /** The face being hit (see below) */
        public Play_Server_PlayerDigging_Builder face(byte face) {
            object.face = face;
            return this;
        }
        public Play_Server_PlayerDigging build() {
             return object;
        }

    }
    public static Play_Server_PlayerDigging_Builder builder() {
        return new Play_Server_PlayerDigging_Builder();
    }
}