package pub.qiuf.litemc.protocol.handshaking.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Handshaking_Server_Handshake extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x00;
    /** See protocol version numbers (currently 578 in Minecraft 1.15.2) */
    @MCType("VarInt")
    private int protocolVersion;
    /** Hostname or IP, e.g. localhost or 127.0.0.1, that was used to connect. The Notchian server does not use this information. Note that SRV records are a complete redirect, e.g. if _minecraft._tcp.example.com points to mc.example.org, users connecting to example.com will provide mc.example.org as server address in addition to connecting to it. */
    @MCType("String")
    private String serverAddress;
    /** Default is 25565. The Notchian server does not use this information. */
    @MCType("UnsignedShort")
    private int serverPort;
    /** 1 for status, 2 for login */
    @MCType("VarInt")
    private int nextState;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // See protocol version numbers (currently 578 in Minecraft 1.15.2)
        packet.write(ByteUtils.encodeVarInt(protocolVersion));
        // Hostname or IP, e.g. localhost or 127.0.0.1, that was used to connect. The Notchian server does not use this information. Note that SRV records are a complete redirect, e.g. if _minecraft._tcp.example.com points to mc.example.org, users connecting to example.com will provide mc.example.org as server address in addition to connecting to it.
        packet.write(ByteUtils.encodeString(serverAddress));
        // Default is 25565. The Notchian server does not use this information.
        packet.write(ByteUtils.encodeUnsignedShort(serverPort));
        // 1 for status, 2 for login
        packet.write(ByteUtils.encodeVarInt(nextState));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // See protocol version numbers (currently 578 in Minecraft 1.15.2)
        protocolVersion = StreamUtils.readVarInt(in);
        // Hostname or IP, e.g. localhost or 127.0.0.1, that was used to connect. The Notchian server does not use this information. Note that SRV records are a complete redirect, e.g. if _minecraft._tcp.example.com points to mc.example.org, users connecting to example.com will provide mc.example.org as server address in addition to connecting to it.
        serverAddress = StreamUtils.readString(in);
        // Default is 25565. The Notchian server does not use this information.
        serverPort = StreamUtils.readUnsignedShort(in);
        // 1 for status, 2 for login
        nextState = StreamUtils.readVarInt(in);
    }
    public static class Handshaking_Server_Handshake_Builder {
        private Handshaking_Server_Handshake object = new Handshaking_Server_Handshake();
        /** Packet ID */
        public Handshaking_Server_Handshake_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** See protocol version numbers (currently 578 in Minecraft 1.15.2) */
        public Handshaking_Server_Handshake_Builder protocolVersion(int protocolVersion) {
            object.protocolVersion = protocolVersion;
            return this;
        }
        /** Hostname or IP, e.g. localhost or 127.0.0.1, that was used to connect. The Notchian server does not use this information. Note that SRV records are a complete redirect, e.g. if _minecraft._tcp.example.com points to mc.example.org, users connecting to example.com will provide mc.example.org as server address in addition to connecting to it. */
        public Handshaking_Server_Handshake_Builder serverAddress(String serverAddress) {
            object.serverAddress = serverAddress;
            return this;
        }
        /** Default is 25565. The Notchian server does not use this information. */
        public Handshaking_Server_Handshake_Builder serverPort(int serverPort) {
            object.serverPort = serverPort;
            return this;
        }
        /** 1 for status, 2 for login */
        public Handshaking_Server_Handshake_Builder nextState(int nextState) {
            object.nextState = nextState;
            return this;
        }
        public Handshaking_Server_Handshake build() {
             return object;
        }

    }
    public static Handshaking_Server_Handshake_Builder builder() {
        return new Handshaking_Server_Handshake_Builder();
    }
}