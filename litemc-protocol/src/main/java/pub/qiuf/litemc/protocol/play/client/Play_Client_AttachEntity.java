package pub.qiuf.litemc.protocol.play.client;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
@ServerPacket(0x45)
public class Play_Client_AttachEntity extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x45;
    /** Attached entity's EID */
    @MCType("Int")
    private int attachedEntityId;
    /** ID of the entity holding the lead. Set to -1 to detach. */
    @MCType("Int")
    private int holdingEntityId;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // Attached entity's EID
        packet.write(ByteUtils.encodeInt(attachedEntityId));
        // ID of the entity holding the lead. Set to -1 to detach.
        packet.write(ByteUtils.encodeInt(holdingEntityId));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // Attached entity's EID
        attachedEntityId = StreamUtils.readInt(in);
        // ID of the entity holding the lead. Set to -1 to detach.
        holdingEntityId = StreamUtils.readInt(in);
    }
    public static class Play_Client_AttachEntity_Builder {
        private Play_Client_AttachEntity object = new Play_Client_AttachEntity();
        /** Packet ID */
        public Play_Client_AttachEntity_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** Attached entity's EID */
        public Play_Client_AttachEntity_Builder attachedEntityId(int attachedEntityId) {
            object.attachedEntityId = attachedEntityId;
            return this;
        }
        /** ID of the entity holding the lead. Set to -1 to detach. */
        public Play_Client_AttachEntity_Builder holdingEntityId(int holdingEntityId) {
            object.holdingEntityId = holdingEntityId;
            return this;
        }
        public Play_Client_AttachEntity build() {
             return object;
        }

    }
    public static Play_Client_AttachEntity_Builder builder() {
        return new Play_Client_AttachEntity_Builder();
    }
}