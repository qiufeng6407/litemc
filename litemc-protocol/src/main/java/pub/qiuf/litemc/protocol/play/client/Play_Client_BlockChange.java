package pub.qiuf.litemc.protocol.play.client;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
@ServerPacket(0x0C)
public class Play_Client_BlockChange extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x0C;
    /** Block Coordinates */
    @MCType("Position")
    private byte[] location = new byte[8];
    /** The new block state ID for the block as given in the global palette. See that section for more information. */
    @MCType("VarInt")
    private int blockId;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // Block Coordinates
        packet.write(location);
        // The new block state ID for the block as given in the global palette. See that section for more information.
        packet.write(ByteUtils.encodeVarInt(blockId));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // Block Coordinates
        // TODO decode location
        // The new block state ID for the block as given in the global palette. See that section for more information.
        blockId = StreamUtils.readVarInt(in);
    }
    public static class Play_Client_BlockChange_Builder {
        private Play_Client_BlockChange object = new Play_Client_BlockChange();
        /** Packet ID */
        public Play_Client_BlockChange_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** Block Coordinates */
        public Play_Client_BlockChange_Builder location(byte[] location) {
            object.location = location;
            return this;
        }
        /** The new block state ID for the block as given in the global palette. See that section for more information. */
        public Play_Client_BlockChange_Builder blockId(int blockId) {
            object.blockId = blockId;
            return this;
        }
        public Play_Client_BlockChange build() {
             return object;
        }

    }
    public static Play_Client_BlockChange_Builder builder() {
        return new Play_Client_BlockChange_Builder();
    }
}