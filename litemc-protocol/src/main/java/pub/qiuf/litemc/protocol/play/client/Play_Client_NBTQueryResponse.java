package pub.qiuf.litemc.protocol.play.client;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import com.flowpowered.nbt.Tag;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
@ServerPacket(0x55)
public class Play_Client_NBTQueryResponse extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x55;
    /** Can be compared to the one sent in the original query packet. */
    @MCType("VarInt")
    private int transactionId;
    /** The NBT of the block or entity. May be a TAG_END (0) in which case no NBT is present. */
    @MCType("Tag")
    private Tag nbt;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // Can be compared to the one sent in the original query packet.
        packet.write(ByteUtils.encodeVarInt(transactionId));
        // The NBT of the block or entity. May be a TAG_END (0) in which case no NBT is present.
        packet.write(ByteUtils.encodeTag(nbt));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // Can be compared to the one sent in the original query packet.
        transactionId = StreamUtils.readVarInt(in);
        // The NBT of the block or entity. May be a TAG_END (0) in which case no NBT is present.
        nbt = StreamUtils.readTag(in);
    }
    public static class Play_Client_NBTQueryResponse_Builder {
        private Play_Client_NBTQueryResponse object = new Play_Client_NBTQueryResponse();
        /** Packet ID */
        public Play_Client_NBTQueryResponse_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** Can be compared to the one sent in the original query packet. */
        public Play_Client_NBTQueryResponse_Builder transactionId(int transactionId) {
            object.transactionId = transactionId;
            return this;
        }
        /** The NBT of the block or entity. May be a TAG_END (0) in which case no NBT is present. */
        public Play_Client_NBTQueryResponse_Builder nbt(Tag nbt) {
            object.nbt = nbt;
            return this;
        }
        public Play_Client_NBTQueryResponse build() {
             return object;
        }

    }
    public static Play_Client_NBTQueryResponse_Builder builder() {
        return new Play_Client_NBTQueryResponse_Builder();
    }
}