package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_ClickWindowButton extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x08;
    /** The ID of the window sent by Open Window */
    @MCType("Byte")
    private byte windowId;
    /** Meaning depends on window type; see below */
    @MCType("Byte")
    private byte buttonId;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // The ID of the window sent by Open Window
        packet.write(ByteUtils.encodeByte(windowId));
        // Meaning depends on window type; see below
        packet.write(ByteUtils.encodeByte(buttonId));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // The ID of the window sent by Open Window
        windowId = StreamUtils.readByte(in);
        // Meaning depends on window type; see below
        buttonId = StreamUtils.readByte(in);
    }
    public static class Play_Server_ClickWindowButton_Builder {
        private Play_Server_ClickWindowButton object = new Play_Server_ClickWindowButton();
        /** Packet ID */
        public Play_Server_ClickWindowButton_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** The ID of the window sent by Open Window */
        public Play_Server_ClickWindowButton_Builder windowId(byte windowId) {
            object.windowId = windowId;
            return this;
        }
        /** Meaning depends on window type; see below */
        public Play_Server_ClickWindowButton_Builder buttonId(byte buttonId) {
            object.buttonId = buttonId;
            return this;
        }
        public Play_Server_ClickWindowButton build() {
             return object;
        }

    }
    public static Play_Server_ClickWindowButton_Builder builder() {
        return new Play_Server_ClickWindowButton_Builder();
    }
}