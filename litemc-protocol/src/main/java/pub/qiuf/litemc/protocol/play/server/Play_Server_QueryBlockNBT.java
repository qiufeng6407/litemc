package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_QueryBlockNBT extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x01;
    /** An incremental ID so that the client can verify that the response matches. */
    @MCType("VarInt")
    private int transactionId;
    /** The location of the block to check. */
    @MCType("Position")
    private byte[] location = new byte[8];

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        // An incremental ID so that the client can verify that the response matches.
        packet.write(ByteUtils.encodeVarInt(transactionId));
        // The location of the block to check.
        packet.write(location);
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        // An incremental ID so that the client can verify that the response matches.
        transactionId = StreamUtils.readVarInt(in);
        // The location of the block to check.
        // TODO decode location
    }
    public static class Play_Server_QueryBlockNBT_Builder {
        private Play_Server_QueryBlockNBT object = new Play_Server_QueryBlockNBT();
        /** Packet ID */
        public Play_Server_QueryBlockNBT_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        /** An incremental ID so that the client can verify that the response matches. */
        public Play_Server_QueryBlockNBT_Builder transactionId(int transactionId) {
            object.transactionId = transactionId;
            return this;
        }
        /** The location of the block to check. */
        public Play_Server_QueryBlockNBT_Builder location(byte[] location) {
            object.location = location;
            return this;
        }
        public Play_Server_QueryBlockNBT build() {
             return object;
        }

    }
    public static Play_Server_QueryBlockNBT_Builder builder() {
        return new Play_Server_QueryBlockNBT_Builder();
    }
}