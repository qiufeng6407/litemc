package pub.qiuf.litemc.protocol.play.server;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.bean.datatype.Slot;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
public class Play_Server_EditBook extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x0C;
    @MCType("Slot")
    private Slot newBook;
    /** True if the player is signing the book; false if the player is saving a draft. */
    @MCType("Boolean")
    private boolean isSigning;
    /** 0: Main hand, 1: Off hand */
    @MCType("VarInt")
    private int hand;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        packet.write(ByteUtils.encodeSlot(newBook));
        // True if the player is signing the book; false if the player is saving a draft.
        packet.write(ByteUtils.encodeBoolean(isSigning));
        // 0: Main hand, 1: Off hand
        packet.write(ByteUtils.encodeVarInt(hand));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        newBook = StreamUtils.readSlot(in);
        // True if the player is signing the book; false if the player is saving a draft.
        isSigning = StreamUtils.readBoolean(in);
        // 0: Main hand, 1: Off hand
        hand = StreamUtils.readVarInt(in);
    }
    public static class Play_Server_EditBook_Builder {
        private Play_Server_EditBook object = new Play_Server_EditBook();
        /** Packet ID */
        public Play_Server_EditBook_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        public Play_Server_EditBook_Builder newBook(Slot newBook) {
            object.newBook = newBook;
            return this;
        }
        /** True if the player is signing the book; false if the player is saving a draft. */
        public Play_Server_EditBook_Builder isSigning(boolean isSigning) {
            object.isSigning = isSigning;
            return this;
        }
        /** 0: Main hand, 1: Off hand */
        public Play_Server_EditBook_Builder hand(int hand) {
            object.hand = hand;
            return this;
        }
        public Play_Server_EditBook build() {
             return object;
        }

    }
    public static Play_Server_EditBook_Builder builder() {
        return new Play_Server_EditBook_Builder();
    }
}