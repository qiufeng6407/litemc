package pub.qiuf.litemc.protocol.play.client;

import pub.qiuf.litemc.common.bean.datatype.Packet;
import com.google.common.io.ByteArrayDataInput;
import com.google.common.io.ByteStreams;
import pub.qiuf.litemc.common.util.ByteUtils;
import pub.qiuf.litemc.common.annotation.MCType;
import com.google.common.io.ByteArrayDataOutput;
import pub.qiuf.litemc.common.annotation.ServerPacket;
import lombok.Data;
import pub.qiuf.litemc.common.util.StreamUtils;

/**
 * Code is generated by <code>pub.qiuf.litemc.generator.ProtocolGenerator</code>, Please don't modify.<br>
 * See more detail from <a>https://wiki.vg/Protocol</a><br>
 */
@Data
@ServerPacket(0x2B)
public class Play_Client_EntityRotation extends Packet {
    /** Packet ID */
    @MCType("VarInt")
    private int packetId = 0x2B;
    @MCType("VarInt")
    private int entityId;
    /** New angle, not a delta */
    @MCType("Angle")
    private byte yaw;
    /** New angle, not a delta */
    @MCType("Angle")
    private byte pitch;
    @MCType("Boolean")
    private boolean onGround;

    @Override
    public byte[] encode() throws Exception {
        ByteArrayDataOutput packet = ByteStreams.newDataOutput();
        // Packet ID
        packet.write(ByteUtils.encodeVarInt(packetId));
        packet.write(ByteUtils.encodeVarInt(entityId));
        // New angle, not a delta
        packet.write(ByteUtils.encodeAngle(yaw));
        // New angle, not a delta
        packet.write(ByteUtils.encodeAngle(pitch));
        packet.write(ByteUtils.encodeBoolean(onGround));
        return packet.toByteArray();
    }
    @Override
    public void decode(ByteArrayDataInput in) throws Exception {
        // Packet ID
        packetId = StreamUtils.readVarInt(in);
        entityId = StreamUtils.readVarInt(in);
        // New angle, not a delta
        yaw = StreamUtils.readAngle(in);
        // New angle, not a delta
        pitch = StreamUtils.readAngle(in);
        onGround = StreamUtils.readBoolean(in);
    }
    public static class Play_Client_EntityRotation_Builder {
        private Play_Client_EntityRotation object = new Play_Client_EntityRotation();
        /** Packet ID */
        public Play_Client_EntityRotation_Builder packetId(int packetId) {
            object.packetId = packetId;
            return this;
        }
        public Play_Client_EntityRotation_Builder entityId(int entityId) {
            object.entityId = entityId;
            return this;
        }
        /** New angle, not a delta */
        public Play_Client_EntityRotation_Builder yaw(byte yaw) {
            object.yaw = yaw;
            return this;
        }
        /** New angle, not a delta */
        public Play_Client_EntityRotation_Builder pitch(byte pitch) {
            object.pitch = pitch;
            return this;
        }
        public Play_Client_EntityRotation_Builder onGround(boolean onGround) {
            object.onGround = onGround;
            return this;
        }
        public Play_Client_EntityRotation build() {
             return object;
        }

    }
    public static Play_Client_EntityRotation_Builder builder() {
        return new Play_Client_EntityRotation_Builder();
    }
}