package pub.qiuf.litemc.common.util;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.Inflater;

public abstract class ZLibUtils {

    public static void main(String[] args) {
        String hexString = "789ced9dbf731bc715c717902cca8c1471ef0050acc25b4a64e4a41070b66b41394f5c869e81d40aa2791e77a227197a5cd12a3c742a924d82b861d4700c371c97a60a35a94ccff00f2018fe030499fc0140dedbf7f670b7004888fa95b1f7ab01beb7bfdee7edde01d4ec81e0b410e2223c2672bff9f77f7317af8a4713fe5e6e3b278b27b9b5b757f22b63b757f2f2ff419ef47c199465e04121f0e101475e28b12803a9dd93152c40a92cb93a30a3cd13752ce82368bc8b65cf5360d8150e80e071abe705bad22b4aa9102ee77d2f0e3087b22c6159be4f11cb25599f83717e29969330c68f6530094d6588021e14648008e8a93c05c3ab11c6c634a088e4bbd00c5d0a01250395520f0860c0f52f835a711eca4a15e7bd7a3df05419d8f50096e1fdb834a78219bf54f7a40acae1fbf1c339a9423f7e0861b19b5a0fa05e46c114a610c113e00b5540400241215281c23214e15f84074a05d58282ec3c550815d4fe76d5bb599b8fa14a79f3aa5e871e33b371bc006d611cc721440ae3faf24c4585e1e4e4b2ac00777979f9b38af2bdd2e45200f595bbc12d55514104bce0895788aac06d8247104cfeb350bd1bc041332257588d0791af300150ad56538ff1e0664d692dd642b4d9f86158410760a8662acbec7f23576a0e5d6b0efaddb80bfe0402a3379fdcd0fe4e533bf2c9355f3b15d3dc015e21bfaf395bdadf692e53f9c9dc5fee337fb932d8e710c4cebaa1fa94f03eca96157bb376bfb201868e7cf25bdfc2ca557840253b70cef2d3950c3b450d58f0e6cd39f05b1bcd9bf7a1e6d64626612852c21b23731365f8bca4336125e37001e2f32d7695f80cb6ff8ef88af967cd456bb7c1c331fd7881c2c135af79b30b167f260c1bcc359ee67f8f87ef7c84be01e785a6450ef657ccbc56d3cb758b5b7fff2fc40217dea3f3f05abb2df202aef9f881c8eb3c8400db995d2057334210575cd03eadbbf55c814f0bf5bd12625a0f1128f671ec4745ed22e676cd357c688f993f8bfc7c8fff0df65783b8699f269e626e2f0fc355f163e63f54d80cfc85e9141f7d9ae73f4d3c0adad0f3ebb91aeca2cf57693cb8ae881fabfc34f1756678962191fc02bce54d23991a94ad86e5e756cca639ac67bd257cac0ff2f47ed8d334bbb0cacfcd9d65ee2c27209c84b84676f246e027d7bae6e0cdf0bb6f74fadd2e4ddf64d17dcdab60732d3f495c64fd65a599acbecdb7789677bb56f7f3e633ea402bcd21e99e837fde812f492fe97a332f9ee4bcd80727dd81676eaf7df054175bcfbea3faed7f5ca683af3f21fffc1ef932fb0ad7af7d7e49fbe6d763421c5d85815068b7afee7ea7bddd7aaae3b7db3f61af23f05f09f1c37ee21afcac8525d0eed371c1e1b2e1c5271f90c7ec8fee5de43cdeea75dcbf4279b45a6207f368b5280f38d079887d70207cfb63e257b17d7b97a6bfb9c3d3176b3c7dc1d3148c137f7a97fc4192476a3d7ec43c701a3c815d41eb818734c167bbf8fcf71f76af6c9233975ad79a4c7b5bbc5619eeca6be63a393939393939fd7275715c4c14a57f925bc91fe6f672e68ec084c8655c0adeaa9f10833de9d027dea597caf690dc0f43e3e564503f5f0cf63bec91f1887851953885ea43edf33d6e60f90c61a32c7f086f647ea4d25eab5535af5643eeb2e6de888ce3dd047937aa26f8e88e8e1f45d1c8dc0f8c6b7e81b9c6e180f200bf1149e6fe91b8040698aef7c377896b1c8344e63c4cb017aa66be369fab691d6c8758818cf828325d33fc5073ef08cae34e8ef2e8adcd19aa72d03b96739e05e35889be8a53985c92ab38101d2e8308813eb90cc27201f9419653b27c22e305e61a9705e366bd3ee4e22a663cf96776e00317aaabc8d5def7bac97267c9bc07ecd303f3491c26a4a71d45181b8a1f163e98475f8dd0211f33cfa1af5ba96faa61f3d4ba52c89f6a18974af31b9cc794e65653532f5435b7c7a7736bbc105d370b9cca639d7caa4158d9005ec0aeb46f647caab18e37fbaab2b14edca9d4d2d37517dde13cee30b7da7f8d4dadb3378c6f04e4c095a5fa14f1eb293e2c4849f3a58aebc42f7d9ce237e8146044e423a110994bd6c2337f497e4afcf8d3240f3c28c5c0f302f27519d4d16199e258f3655cc7088d75ed0dbd12d0814270b157bdaecfd29495405df34b1051f3635e8ffa14b75282312d501d40ebec18aa44040b94c9a391e6cb217c04b3a79a6a96cbd42bb2deabb3f8a93cfcf43a98333dba06f0076acaa737cc067963dda7a2f4b9833f7098eeca9e9cf5e74a30e4ecc25cca4d7d8adbc7373b118fded0ff48de14d7c9c9c9c9c9c9c9c9c9c9c9c9c9e997a48b6f8b89dbf224e717d7722bf9957cb24fae8c07ec54e1998653f6218c47968fb21f71165f3d07ff141fba0fd3cfcfe6e1990ea7cb9e9ff66417693eebc55acdf8fcacc9c3cac71b093b50c59a71e445191ce5c107e0b57afff817d5607ed4c7af22ffe5e37b32c1df435aa16ffdfff01ee411bf820560f961d60bec11bbbe33f6b2f8c975339ccf77e2e4bb49b99c6cc29e9fdbf7bae5f2d979183f1f77e8fb46b67d80ec3c5e48fdef1b67f123cbb5cce6b77ddfe96cbe71ebbee7f0e99fca3f771e93437c241586f3bfb4ba2e2f1b5f1ae256bfa511f28aaac42b544b1e2d6829398fb3265e9d9d228fee4b4ba7e569443f67aafdd7b1222efeecb63d37dc4b69a7feb91cbbccba9393939393939393939393939393d3cf5dfa7e40117f4140fa7bf0ec25fbdec9fe7b90dd8f28f3be417861847d099feb43cbfddefec38590e38586879f3ef77aaeb85e27a26668cbcb7cae5f887239b59f51660fb3ee273e31412e6febf4e5ed907e31a0ec873a81145fe94fc19b05f03277048abc6d63fc3d32df72696d7da69ca6eb972dbe37e006c8103e7e12567b4c7c70cd857ae29712def0fb2365fa050dbf6cb643cd8d07cfde61f57827aa64b6acf5077797d0eb5caeebb8257699b82c9d755f863cbb39c718c3eb799c728b4fde3b88d9173816bb349ed5887cfb83cb8927895117c32fc576d7cc879d49858119a595704d62b6f728c94a59fc523ff75568f82c078a763e4fdbb37e25f254caabbdf21be1cbde0b6d740ddcca1f28ebfc67ae033b8fa14a2e51f3ab14c4bdfe827cad7a7f676bd0ea571f93afd6abe4746fe0faeaaae406c91567a6d353b2845e60def0b22ff4ebab31fb6accb8af18b79af1eb9c50c9242647c9a3ceefb8b197dce97e857c789bcf38fdc809c0eb9a1f866fe2ff204e4e4e4e4e4e4e4e4e4e4e4e4e4e4eaf5717af8809b9972bde9e5ecbffe7c2467e33ff244fdf1a647d5308ef168515f63060a7ad05dffe942f6e459baf0a614fbe5d66b817e76bf303be3b63040df8c47fc1fa969811f8197f51d97c3b8fa4de5a275bc5c1d5e7ef38ac9fa9e70fee17333e2fe7b517d97bbf5790ee878f1a3d6a2fe0fa37058aec7d4daf47af1d98288e1753be1893c7e468f7166bf7ee71f95ebc480e47f1223e627ae8763e48ca64f716b9b4c855d976212e419ff813ed317e71ec255dab1dedd15bf183075c7e20c6c017e30770242ee103eabf12975774fb18bdcd40dd65147f09eddaa595cb42ac8c894b97c518b5af987e4610d77c8beb787333eb5f6ce9fecde626c6817a3136e4fd2d53dfa418e3cd35f4e6f81696b79ae354dfd4ed82199a93f0ad3cbed8b2f23a83bfb34dddc035ff9b6de26319f93b948fc5efcddfd498a62fc6b2e5649ebd8c682c44d7fc1fa8bcb3addb918f41912fb636c5f84e76de36bf69c2358d6f516f286f126eab99e566f9a6bc4df98d7f43936a6e13777c9b27b99de59b8c36074c8bb9bd84321d84f12d8e41fd4dfc1df6ed219e1e93ad12d9b0e3e39b16873b9853666224a7f0c5d417f615719c9c9c9c9c9c9c9c9c9c9c7ef6327fbe675f3f9f748fba27da3bfacfdc1cb63bfaefdfecb58ebadd6bd7c4b32b1dfd0795f65af07c0ddbbbdd93eec195932eea6097fdd94917071eb40edbadce71fba8bdd7daeb1cb43addbd2badcec15ea77bf8535b974f0ebadd638c71bc7fd8bd86638fba24e476db6dcd8740c8ef1eff047c2c3edd6f11e7a8ad7dbfd3cd3810887fc4fc03e61f5f25fe31f3bbccef1eb7dac41dc6efbc00bfadf9ed23e41f0de11f1c1297d3e0429b03eae96b3eadf3fe11f33bc3f83cacad834302877a4ac757817d8838e61e3069543e71f747e577f43a1eb73b08c3c35f7778bebcc4c7867fcc7c534105e6b7f5f2439214f8e088b97bed7473b7cd272f89d59b8c09dbb6ca3d7e66e2b6da99c0c79d4e869344ed58dcce69319f475660c37f891cef17aeff0182e7b308";
        System.out.println(ByteUtils.bytestoHexString(decompress(ByteUtils.hexStringtoBytes(hexString))));
    }

    public static byte[] decompress(byte[] data) {
        byte[] output = new byte[0];

        Inflater decompresser = new Inflater();
        decompresser.reset();
        decompresser.setInput(data);

        ByteArrayOutputStream o = new ByteArrayOutputStream(data.length);
        try {
            byte[] buf = new byte[1024];
            while (!decompresser.finished()) {
                int i = decompresser.inflate(buf);
                o.write(buf, 0, i);
            }
            output = o.toByteArray();
        } catch (Exception e) {
            output = data;
            e.printStackTrace();
        } finally {
            try {
                o.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        decompresser.end();
        return output;
    }
}
